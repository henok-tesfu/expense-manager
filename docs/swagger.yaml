definitions:
  handlers.ErrorResponse:
    properties:
      errors:
        additionalProperties:
          type: string
        type: object
      message:
        type: string
    type: object
  handlers.LoginInput:
    description: Input payload for login
    properties:
      email:
        description: User email
        type: string
      password:
        description: User password
        type: string
    required:
    - email
    - password
    type: object
  handlers.RegisterInput:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
      username:
        minLength: 3
        type: string
    required:
    - email
    - password
    - username
    type: object
  handlers.SuccessResponse:
    properties:
      data: {}
      message:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/auth/refresh:
    post:
      consumes:
      - application/json
      description: Generate a new access token using a valid refresh token
      produces:
      - application/json
      responses:
        "200":
          description: Access token refreshed
          schema:
            $ref: '#/definitions/handlers.SuccessResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Refresh the access token
      tags:
      - User
  /api/login:
    post:
      consumes:
      - application/json
      description: Authenticate a user with an email and password
      parameters:
      - description: Login Input
        in: body
        name: LoginInput
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            $ref: '#/definitions/handlers.SuccessResponse'
        "400":
          description: payload errors
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Invalid email or password
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "422":
          description: Validation errors
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Login a user
      tags:
      - User
  /api/register:
    post:
      consumes:
      - application/json
      description: Create a new user with a username, email, and password
      parameters:
      - description: Register Input
        in: body
        name: RegisterInput
        required: true
        schema:
          $ref: '#/definitions/handlers.RegisterInput'
      produces:
      - application/json
      responses:
        "201":
          description: User registered successfully
          schema:
            $ref: '#/definitions/handlers.SuccessResponse'
        "422":
          description: Validation or payload errors
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Register a new user
      tags:
      - User
swagger: "2.0"
